1000 1000 1000 1000
1000 1000 1000 1000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000

1000 0000 
1000 0000
1000 0000
1000 0000
0000 0000
0000 0000
0000 0000
0000 0000

1000 0000 0000 0000
//mask I need: bit at index 51 == 1
//Needs to move 12, 8 and 4
0000 0000 0000 1000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
1000 1000 1000 0000 0000 0000 0000 0000 0000 0000 0000 0000 1000 0000 0000 0000
// 36 steps to the right for last (= 12 * 3) 12 = 16 - 4;

0100 1110 0000 0000
0100 0000
//Needs to move 2, 4, 6 
1000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000

0100 0000 
1000 0100
0010 0000
0000 0000
0000 0000
0000 0000
0000 0000
0000 0000

//needs to move 3, 5 and 0
1100 1100

1100 0000
1100 0000

LEAVE ORIGINAL 4 BYTES (TOP ROW) AS IS
second row:
1000
1000 0000
needs to move 4
0100
0100 0000
needs to move 4
0010
needs to move 4

only increase offset if row changes??
0001 0111 0011 0100 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000

if i < 4 --> row 1
i > 60 (size - width)
if i < 8 --> row 2
i > 56
if i < 12 --> row 3
i > 52
if i < 16 --> row 4
i > 48

0001	//move 0	0001 0000
0111	//move 4	0111 0000
0011	//move 8	0011 0000
0100	//move 12	0100 0000